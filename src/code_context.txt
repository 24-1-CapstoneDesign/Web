// File: app/(route)/classNotes/page.tsx
"use client";

import Sidebar from '@/app/components/layout/Sidebar';
import React from 'react';
import Image from 'next/image';
import CreateNewFile from '@/app/components/button/CTANewFile';
import SectionInfo from '@/app/components/section/SectionInfo';
import { notes, Note } from '@/app/constants/notes';
import Link from 'next/link';

interface NoteListProps {
  notes: Note[];
}

const classNotes: React.FC = () => {
  return (
    <div className="flex flex-row bg-bgGray min-h-screen">
      <Sidebar />
      <div className="w-full">
        {/* 수강과목 제목 헤더 */}
        <SectionInfo />
        {/* 노트가 있을 때 보여지는 페이지 */}
        {notes.length > 0 ? (
          <NoteList notes={notes} />
        ) : (
          <div className="h-full mt-[-100px] flex flex-col justify-center items-center">
            <div className="text-center pb-3 flex-shrink-0">
              <p className="pretendard-font font-normal text-[20px] text-mainWhite">
                노트를 만들어 보세요.
              </p>
              <p className="pretendard-font font-light text-[18px] text-mainWhite/[0.3] leading-6">
                녹음을 하거나 파일을 업로드하면 <br />
                텍스트로 확인할 수 있어요.
              </p>
            </div>
            <Link href="/createNotes">
              <CreateNewFile />
            </Link>
          </div>
        )}
      </div>
    </div>
  );
}


const NoteList: React.FC<NoteListProps> = ({ notes }) => {
  return (
    <div className="px-6">
      {notes.map((note, index) => (
        <div key={index} className="flex flex-row items-center justify-between bg-darkGray p-4 mb-2 rounded cursor-pointer hover:bg-[#3c3c3c] transition-colors duration-200">
          <div className="flex items-center">
            <Image src={`/${note.icon}.svg`} alt="status icon" width={24} height={24} className="mr-4" />
            <p className="font-Pretendard text-[16px] text-mainWhite">{note.title}</p>
          </div>
          <div className="flex items-center space-x-4">
            <p className="font-Pretendard text-[14px] text-mainWhite">{note.status}</p>
            <p className="font-Pretendard text-[14px] text-mainWhite">{note.step}</p>
            <p className="font-Pretendard text-[14px] text-mainWhite">{note.date}</p>
            <p className="font-Pretendard text-[14px] text-mainWhite">{note.duration}</p>
            <Image src="/delete-icon.svg" alt="delete icon" width={20} height={20} className="cursor-pointer" />
          </div>
        </div>
      ))}
    </div>
  );
};

export default classNotes;

// File: app/(route)/course/page.tsx
import React from "react";

const coursePage = () => {
  return(
  <main className="w-full h-screen bg-bgGray flex flex-row">
    <section className="text-mainWhite w-full ">
      </section>
  </main>);
};

export default coursePage;

// File: app/(route)/createNotes/page.tsx
import React from 'react';
import NewNoteForm from '@/app/components/notes/NewNoteForm';
import Sidebar from '@/app/components/layout/Sidebar';
import CTANewNote from '@/app/components/button/CTANewNote';

const NewNotePage: React.FC = () => {
  return (
    <div className="flex flex-row bg-bgGray h-full">
      <Sidebar />
      <div className = "justify-between flex flex-col items-end w-full ">
        {/* 새로운 노트만들기 */}
        <NewNoteForm />
        {/* 노트만들기 버튼 */}
        <div className = "p-8">
          <CTANewNote />
        </div>
      </div>
    </div>
  );
};

export default NewNotePage;

// File: app/(route)/dashboard/page.tsx
"use client";

import { useSession, signIn, signOut } from "next-auth/react";
import { useEffect } from "react";

const Dashboard = () => {
  const { data: session } = useSession();

  useEffect(() => {
    if (session && session.accessToken) {
      const accessToken = session.accessToken;
      fetch('http://43.201.165.4:8080/auth/sign-in', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${accessToken}`
        },
        body: JSON.stringify({
          token: accessToken
        })
      })
      .then(response => response.json())
      .then(data => {
        console.log('Login success:', data);
      })
      .catch(error => {
        console.error('Error:', error);
      });
    }
  }, [session]);

  if (session) {
    return (
      <>
        Signed in as {session.user?.email} <br />
        <button onClick={() => signOut()}>Sign out</button>
      </>
    );
  }
  return (
    <>
      Not signed in <br />
      <button onClick={() => signIn()}>Sign in</button>
    </>
  );
};

export default Dashboard;

// File: app/(route)/home/page.tsx
"use client";
import React, { useEffect } from 'react'
import Sidebar from '@/app/components/layout/Sidebar'
import Image from 'next/image';
import SectionFolder from '@/app/components/section/SectionFolder';
import CreateNewSection from '@/app/components/button/CTANewSection';
import { useRouter } from 'next/navigation';
import { useSession } from 'next-auth/react';

const home = () => {
    const { data: session, status } = useSession();
    const router = useRouter();
  
    useEffect(() => {
      if (status === "authenticated") {
        router.push("/dashboard");
      }
    }, [status]);

  return (
    // <div className = "flex flex-row bg-bgDeepGray ">
    //     <Sidebar />
    //     <div className = "w-full flex flex-col justify-between">
    //         <div className = "px-8 py-8 font-Pretendard font-semibold leading-[70px] text-[57px] text-custom-green">
    //             안녕하세요 상민님,<br/>
    //             오늘은 자기주도학습 <p className = "font-Pretendard font-semibold text-[57px] text-mainWhite inline-block"> 01일차</p>예요!
    //         </div>
    //         <div className = "border-t-2 h-[600px] border-r-2 border-l-2 border-[#929292]/[0.4] rounded-t-xl rounded-r-ml rounded-l-ml bg-[#242424]">
    //             <div className="mx-4 my-4 flex flex-row justify-between items-center ">
    //                 <div className = "flex flex-row gap-2 ">  
    //                     <Image src="ic_side_all.svg" alt="logo" width={24} height={24} />
    //                     <p className="text-white text-[18px]">수강과목</p>
    //                 </div>
    //                 <div>
    //                     <CreateNewSection/>
    //                 </div>
    //             </div>
    //             <div className="grid grid-cols-5 gap-3 px-4">
    //                 <SectionFolder/>
    //                 <SectionFolder/>
    //                 <SectionFolder/>
    //                 <SectionFolder/>
    //                 <SectionFolder/>
    //             </div>
    //         </div>
    //     </div>
    // </div>
    <div>
    {status === "loading" ? (
      <p>Loading...</p>
    ) : (
      <p>Please sign in</p>
    )}
  </div>
  );
};

export default home
// File: app/api/auth/[...nextauth].ts
import NextAuth, { NextAuthOptions } from 'next-auth';
import GoogleProvider from 'next-auth/providers/google';

const options: NextAuthOptions = {
  providers: [
    GoogleProvider({
      clientId: process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID!,
      clientSecret: process.env.NEXT_PUBLIC_GOOGLE_CLIENT_SECRET!,
      authorization: {
        params: {
          scope: 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile',
        },
      },
    }),
  ],
  callbacks: {
    async jwt({ token, account }) {
      // Initial sign in
      if (account) {
        token.accessToken = account.access_token as string;
      }
      return token;
    },
    async session({ session, token }) {
      session.accessToken = token.accessToken as string;
      return session;
    },
  },
};

export default NextAuth(options);

// File: app/components/ClientSessionProvider.tsx
"use client";

import { SessionProvider } from "next-auth/react";
import { ReactNode } from "react";

export default function ClientSessionProvider({
  children,
}: {
  children: ReactNode;
}) {
  return <SessionProvider>{children}</SessionProvider>;
}

// File: app/components/GoogleLoginCTA.tsx
import React from "react";
import { signIn } from "next-auth/react";
import Image from "next/image";

const GoogleLoginCTA = () => {
  // const handleGoogleLogin = () => {
  //   const clientId = process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID;
  //   const redirectUri = process.env.NEXT_PUBLIC_GOOGLE_REDIRECT_URI;

  //   if (!clientId || !redirectUri) {
  //     console.error('Google 클라이언트 ID 또는 리디렉션 URI가 설정되지 않았습니다.');
  //     return;
  //   }

  //   const url = new URL('https://accounts.google.com/o/oauth2/auth');
  //   url.searchParams.append('client_id', clientId);
  //   url.searchParams.append('redirect_uri', redirectUri);
  //   url.searchParams.append('response_type', 'token');
  //   url.searchParams.append('scope', 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile');

  //   window.location.href = url.toString();
  // };

  return (
  //   <button
  //   className="h-[57px] w-[264px] bg-mainWhite flex flex-col justify-center items-center rounded-md"
    // onClick={handleGoogleLogin}
  // >
  //   <div className="flex flex-row gap-3">
  //     <Image src="/google.svg" alt="google" width={24} height={24} />
  //     <p className="text-bgDeepGray flex flex-col justify-center text-center items-center">
  //       Google계정으로 계속하기
  //     </p>
  //   </div>
  // </button>
    <button
    className="h-[57px] w-[264px] bg-mainWhite flex flex-col justify-center items-center rounded-md"
    onClick={() => signIn('google')}
  >
    <div className="flex flex-row gap-3">
      <Image src="/google.svg" alt="google" width={24} height={24} />
      <p className="text-bgDeepGray flex flex-col justify-center text-center items-center">
        Google계정으로 계속하기
      </p>
    </div>
  </button>
  );
};

export default GoogleLoginCTA;

// File: app/components/Navbar.tsx
import Link from "next/link";
import React from "react";

const Navbar = () => {
  return (
    <nav>
      <div>
        <div>
          <Link href="/course">수강과목</Link>
        </div>
      </div>
    </nav>
  );
};

export default Navbar;

// File: app/components/button/CTANewFile.tsx
import React from 'react'

const CreateNewFile = () => {
  return (
    <button className = "cursor-pointer">
        <div className = "h-[46px] flex justify-center items-center w-[130px] flex-shrink-0  bg-[#3F3F3F] border-2 border-[#565656] rounded-[27px] hover:bg-[#282828] text-mainWhite hover:text-[#878787]" >
            <p className = "font-Pretendard text-[18px] text-center">노트 만들기</p>
        </div>
    </button>
  )
}

export default CreateNewFile
// File: app/components/button/CTANewNote.tsx
import React from 'react'
import Image from 'next/image'

const CTANewNote = () => {
  return (
    <button 
    type = "submit"
    className = "cursor-pointer ">
        <div className = "flex flex-col justfify-center ">
            <div className = "h-[46px] flex flex-row gap-3 items-center w-[140px] flex-shrink-0 pl-4 pr-2 py-3 bg-[#3F3F3F] border-2 border-[#565656] rounded-[27px] hover:bg-[#282828] text-mainWhite hover:text-[#878787]" >
                <p className = "font-Pretendard text-[18px] text-center">노트 만들기</p>
                <Image src="arrow_next.svg" alt="plus icon" width={12} height={20} />
            </div>
        </div>
    </button>
    
  )
}

export default CTANewNote
// File: app/components/button/CTANewSection.tsx
import React from 'react'

const CreateNewSection = () => {
  return (
    <button className = "cursor-pointer">
        <div className = "h-[46px] flex justify-center items-center w-[160px] flex-shrink-0  bg-[#3F3F3F] border-2 border-[#565656] rounded-[27px] hover:bg-[#282828] text-mainWhite hover:text-[#878787]" >
            <p className = "font-Pretendard text-[18px] text-center">새 과목 만들기</p>
        </div>
    </button>
  )
}

export default CreateNewSection
// File: app/components/layout/CreateNotes.tsx
import Sidebar from '@/app/components/layout/Sidebar';
import React from 'react';
import Image from 'next/image';
import CreateNewFile from '@/app/components/button/CTANewFile';
import SectionInfo from '@/app/components/section/SectionInfo';
import { notes, Note } from '@/app/constants/notes';

const classNotes: React.FC = () => {
    return (
        <div className="flex flex-row bg-bgGray min-h-screen">
            <Sidebar />
            <div className="w-full">
                {/* 수강과목 제목 헤더 */}
                <SectionInfo />
                {/* 노트가 있을 때 보여지는 페이지 */}
                {notes.length > 0 ? (
                    <NoteList notes={notes} />
                ) : (
                    <div className="h-full mt-[-100px] flex flex-col justify-center items-center ">
                        <div className="text-center pb-3 flex-shrink-0">
                            <p className="pretendard-font font-normal text-[20px] text-mainWhite">
                                노트를 만들어 보세요.
                            </p>
                            <p className="pretendard-font font-light text-[18px] text-mainWhite/[0.3] leading-6">
                                녹음을 하거나 파일을 업로드하면 <br />
                                텍스트로 확인할 수 있어요.
                            </p>
                        </div>
                        <div onClick={() => handleCreateNewFile()}>
                            <CreateNewFile />
                        </div>
                    </div>
                )}
            </div>
        </div>
    );
};

const handleCreateNewFile = () => {
    // Handle the creation of a new file
    console.log('Create New File');
    // Add navigation or other logic here
};

interface NoteListProps {
    notes: Note[];
}

const NoteList: React.FC<NoteListProps> = ({ notes }) => {
    return (
        <div className="p-6">
            {notes.map((note, index) => (
                <div key={index} className="flex flex-row items-center justify-between bg-darkGray p-4 mb-2 rounded">
                    <div className="flex items-center">
                        <Image src={`/${note.icon}.svg`} alt="status icon" width={24} height={24} className="mr-4" />
                        <p className="font-Pretendard text-[16px] text-mainWhite">{note.title}</p>
                    </div>
                    <div className="flex items-center space-x-4">
                        <p className="font-Pretendard text-[14px] text-mainWhite">{note.status}</p>
                        <p className="font-Pretendard text-[14px] text-mainWhite">{note.step}</p>
                        <p className="font-Pretendard text-[14px] text-mainWhite">{note.date}</p>
                        <p className="font-Pretendard text-[14px] text-mainWhite">{note.duration}</p>
                        <Image src="/delete-icon.svg" alt="delete icon" width={20} height={20} className="cursor-pointer" />
                    </div>
                </div>
            ))}
        </div>
    );
};

export default classNotes;

// File: app/components/layout/Sidebar.tsx
import React from 'react'
import Link from 'next/link';
import Image from 'next/image';

const Sidebar = () => {
  return (
    <div className="w-[223px] h-screen justify-between flex flex-col bg-mainBlack">
        <div>
            <Link href="/home">
            <div className="px-8 py-8">
                <Image src="/icon.svg" alt="logo" width={100} height={100} />
            </div>
            </Link>
            {/* 요소 */}
            <div>
                <div className = "hover:bg-#3c3c3c active:#3c3c3c ">
                <Link href="/home">
                    <div className="bg- px-8 py-2 flex flex-row text-center gap-3">
                        <Image src="ic_side_home.svg" alt="logo" width={20} height={20} />
                        <p className="text-white">홈</p>
                    </div>
                </Link>
                </div>
                <Link href = "/classNotes">
                <div className = "flex flex-col">
                    <div className="px-8 py-2 flex flex-row text-center gap-3">
                        <Image src="ic_side_all.svg" alt="logo" width={20} height={20} />
                        <p className="text-white">수강과목</p>
                    </div>
                    <div className = "flex flex-">
                    </div>
                </div>
                </Link>
            </div>
        </div>
        {/* 로그아웃, 가이드보기 */}
        <div className = "pb-8">
            <div className = "flex flex-row px-9 py-2 gap-3 hover:bg-#3c3c3c">
                <Image src = "logout.svg" alt = "logo" width = {15} height = {15} />
                <p className = "text-white">로그아웃</p>
            </div>
            <div className = "flex flex-row px-[35px] py-2 gap-3 hover:bg-#3c3c3c">
                <Image src = "guide.svg" alt = "logo" width = {18} height = {18} />
                <p className = "text-white">가이드보기</p>
            </div>
        </div>
    </div>
  ) 
}

export default Sidebar;
// File: app/components/modal/NoteModify.tsx
import React from 'react'

const NoteModify = () => {
  return (
    <div className="bg-[#343434] py-[10px] px-[15px] w-[160px] rounded-md">
      <button className="block font-Pretendard font-regular text-[15px] text-left w-full text-mainWhite hover:text-gray-300 transition-colors duration-200">
        노트 정보 수정하기
      </button>
  </div>
  )
}

export default NoteModify
// File: app/components/modal/SectionModify.tsx
import React from 'react'

const SectionModify = () => {
  return (
    <div className="bg-darkGray py-[12px] px-[15px] w-[180px] rounded-md">
      <button className="block font-Pretendard font-regular text-[15px] text-left w-full text-mainWhite mb-2 hover:text-gray-300 transition-colors duration-200">
        정보
      </button>
      <button className="block font-Pretendard font-regular text-[15px] text-left w-full text-red-500 hover:text-red-700 transition-colors duration-200">
        삭제하기
      </button>
  </div>
  )
}

export default SectionModify
// File: app/components/notes/NewNoteForm.tsx
"use client"
import React, { useState } from 'react';
import Image from 'next/image';
import CTANewNote from '../button/CTANewNote';


const NewNoteForm = () => {
  const [form, setForm] = useState({
    folder: '',
    professor: '',
    file: '',
  });
  const [file, setFile] = useState<File | null>(null);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setForm({
      ...form,
      [e.target.name]: e.target.value,
    });
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      setFile(e.target.files[0]);
    }
  };

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const formData = new FormData();
    formData.append('folder', form.folder);
    formData.append('professor', form.professor);
    formData.append('file', form.file);
    if (file) {
      formData.append('file', file);
    }

    await fetch('/api/upload', {
      method: 'POST',
      body: formData,
    });
  };

  return (
    <div className="w-full h-full bg-bgGray text-white p-8">
    <form onSubmit={handleSubmit} className="space-y-4">
      <div>
        <label className="text-[15px] font-Pretendard font-normal text-mainWhite">노트 정보를 입력해 주세요</label>
        <input
          type="text"
          name="file"
          value={form.file}
          onChange={handleChange}
          placeholder="예) 캡스톤디자인 1주차"
          className="mt-1 block bg-bgGray text-mainWhite text-[22px] rounded-md py-1 pr-2 pl-0 "
        />
      </div>
      <div className = "flex flex-row gap-12">
        <label className="text-[16px] text-start font-normal font-Pretendard text-mainWhite justify-center flex flex-col items-center">폴더</label>
        <input
          type="text"
          name="folder"
          value={form.folder}
          onChange={handleChange}
          className="mt-1  bg-[#252424] text-white  h-[34px] w-[150px] rounded-[20px] px-3"
        />
      </div>
      <div className = "flex flex-row gap-9 ">
        <label className="text-[16px] font-normal font-Pretendard text-mainWhite justify-center flex flex-col text-center items-center">교수자</label>
        <input
          type="text"
          name="professor"
          value={form.professor}
          onChange={handleChange}
          className="mt-1  bg-[#252424] text-white  h-[34px] w-[120px] rounded-[20px] px-3"
        />
      </div>
      <div className = "flex flex-row gap-5" >
        <label className="text-[16px] mt-[8px] font-normal font-Pretendard text-mainWhite justify-start flex flex-col text-start items-start flex-shrink-0">강의 음성</label>
        <div className="mt-1 flex justify-between w-full">
          <label
            htmlFor="file-upload"
            className="flex flex-col justify-start w-[730px] h-32 rounded-[12px] p-5 cursor-pointer bg-[#252424] text-gray-400 hover:text-gray-500 hover:bg-bgDeepGray"
          >
            <div className="flex flex-col text-start items-start justify-start">
              <p className="mb-1 text-sm text-[#D9D9D9]">
                <span className="font-normal">파일을 업로드 하거나 클릭하세요</span>
              </p>
              <p className="text-xs text-gray-500">'파일 첨부'를 클릭하거나 음성 파일을 직접 끌어다 놓으세요.(파일 길이: 최대 120분, 지원 형식: m4a, mp3, wav)</p>
            </div>
            <div className="mt-3 flex flex-col justify-end items-end">
                <button className = "pr-3 pl-2 py-2 flex flex-row gap-1 rounded-md bg-[#5F5F5F]">
                  <Image src="icon_upload.svg" alt="file-upload" width={22} height={22} />
                  <span className="text-[14px] text-mainWhite">파일 첨부</span>
                </button>
              </div>
            <input
              id="file-upload"
              type="file"
              className="hidden"
              onChange={handleFileChange}
            />
          </label>
        </div>
      </div>
    </form>
  </div>
  );
};

export default NewNoteForm;

// File: app/components/section/SectionFolder.tsx
"use client";
import { useState } from 'react';
import React from 'react'
import Image from 'next/image';
import SectionModify from '../modal/SectionModify';

const SectionFolder: React.FC = () => {
  const [showModify, setShowModify] = useState(false);

  const handleMenuClick = () => {
    setShowModify(!showModify);
    console.log('clicked')
  };
  return (
    <div>
        <div className = "relative">
          <Image src="/folder.svg" alt="logo" width={500} height={500} />
          <div className = "absolute w-full mb-[12px] ml-[12px] mt-[-52px] pr-[20px] ">
            <div className = "flex justify-between">
              <div className = "flex flex-col">
                <p className = "text-mainBlack font-Pretendard font-medium text-[18px] ">
                    캡스톤디자인
                </p>
                <p className="text-[#1D1D1D]/[0.5] font-Pretendard font-normal text-[11px]">
                    김대원
                </p>
              </div>
              <div className="mt-[4px]">
              <Image
                src="kebab-menu.svg"
                alt="menu"
                width={20}
                height={20}
                onClick={handleMenuClick}
                className="cursor-pointer"
              />
            </div>
            </div>
          </div>
          {showModify && (
        <div className="absolute right-0 top-10 bg-[#343434] rounded-[8px] shadow-2xl">
          <SectionModify />
        </div>
        )}
        </div>
  
      
    </div>
  )
}

export default SectionFolder
// File: app/components/section/SectionInfo.tsx
"use client"

import React, { useState } from 'react'
import Image from 'next/image'
import CreateNewFile from '../button/CTANewFile'
import Link from 'next/link'
import NoteModify from '../modal/NoteModify'
const SectionInfo = () => {

const [showModifying, setShowModifying] = useState(false);
    const handleMenuClick = () => {
        setShowModifying(!showModifying);
        console.log('clicked')
    }
return (
    <div className = "flex flex-row justify-between px-8 py-6">
        <div className = "flex flex-col">
            <p className = "font-Pretendard text-[20px] text-mainWhite">
                캡스톤디자인
            </p>
            <div>
                <p className = "font-Pretendard text-[14px] text-mainWhite/[0.4]">
                    김대원
                </p>
            </div>
        </div>
        <div className = "flex flex-row gap-3">
             <Link href="/createNotes">
              <CreateNewFile />
            </Link>
            <Image 
            src = "kebab-menu.svg" 
            alt = "logo"
            width = {24}
            height = {24}
            onClick= {handleMenuClick}
            className=' invert cursor-pointer' 
            />
            {showModifying && (
            <div className="absolute right-[42px] top-[85px] mt-[-18px] bg-bgDeepGray rounded-[8px] shadow-2xl">
                <NoteModify />
            </div>
        )}
        </div>
    </div>
  )
}

export default SectionInfo
// File: app/constants/notes.tsx
export interface Note {
    title: string;
    status: string;
    step: string;
    date: string;
    duration: string;
    icon: string;
  }
  
  export const notes: Note[] = [
    {
      title: '캡스톤디자인_1주차',
      status: '학습 완료',
      step: '3단계 / 3단계',
      date: '2024.03.06',
      duration: '72분',
      icon: 'check_circle_filled',
    },
    {
      title: '캡스톤디자인_2주차',
      status: '1단계 진행중',
      step: '1단계 / 3단계',
      date: '2024.03.13',
      duration: '50분',
      icon: 'check_circle_outline',
    },
    {
      title: '캡스톤디자인_3주차',
      status: '2단계 진행중',
      step: '2단계 / 3단계',
      date: '2024.03.20',
      duration: '90분',
      icon: 'check_circle_outline',
    },
    {
      title: '캡스톤디자인_4주차',
      status: '3단계 진행중',
      step: '3단계 / 3단계',
      date: '2024.03.27',
      duration: '80분',
      icon: 'check_circle_outline',
    }
  ];
  
// File: app/global.css
@tailwind base;
@tailwind components;
@tailwind utilities;


:root {
    --foreground-rgb: 0, 0, 0;
    --background-start-rgb: 214, 219, 220;
    --background-end-rgb: 255, 255, 255;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-smooth: never; 
}

@font-face {
    font-family: 'Pretendard';
    font-weight: 100;
    font-style: normal;
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Thin.eot');
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Thin.eot?#iefix') format('embedded-opentype'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Thin.woff2') format('woff2'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Thin.woff') format('woff'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Thin.ttf') format("truetype");
    font-display: swap;
  }
  
  @font-face {
    font-family: 'Pretendard';
    font-weight: 300;
    font-style: normal;
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Light.eot');
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Light.eot?#iefix') format('embedded-opentype'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Light.woff2') format('woff2'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Light.woff') format('woff'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Light.ttf') format("truetype");
    font-display: swap;
  }
  
  
  @font-face {
    font-family: 'Pretendard';
    font-weight: 400;
    font-style: normal;
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Regular.eot');
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Regular.eot?#iefix') format('embedded-opentype'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Regular.woff2') format('woff2'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Regular.woff') format('woff'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Regular.ttf') format("truetype");
    font-display: swap;
  }
  
  @font-face {
    font-family: 'Pretendard';
    font-weight: 600;
    font-style: normal;
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-SemiBold.eot');
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-SemiBold.eot?#iefix') format('embedded-opentype'),
    url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-SemiBold.woff2') format('woff2'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-SemiBold.woff') format('woff'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-SemiBold.ttf') format("truetype");
    font-display: swap;
  }
  
  @font-face {
    font-family: 'Pretendard';
    font-weight: 700;
    font-style: normal;
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Bold.eot');
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Bold.eot?#iefix') format('embedded-opentype'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Bold.woff2') format('woff2'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Bold.woff') format('woff'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-Bold.ttf') format("truetype");
    font-display: swap;
  }
  @font-face {
    font-family: 'Pretendard';
    font-weight: 800;
    font-style: normal;
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-ExtraBold.eot');
    src: url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-ExtraBold.eot?#iefix') format('embedded-opentype'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-ExtraBold.woff2') format('woff2'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-ExtraBold.woff') format('woff'),
        url('https://cdn.jsdelivr.net/gh/webfontworld/pretendard/Pretendard-ExtraBold.ttf') format("truetype");
    font-display: swap;
  }
// File: app/layout.tsx
import { ReactNode } from "react";
import "./global.css";
import { Inter } from "next/font/google";
import ClientSessionProvider from "../app/components/ClientSessionProvider";

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: ReactNode;
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <ClientSessionProvider>{children}</ClientSessionProvider>
      </body>
    </html>
  );
}

// File: app/page.tsx
"use client";
import Lottie from "react-lottie-player";
import lottieJson from "../../public/BouncingBall.json";
import Image from "next/image";
import Link from "next/link";
import GoogleLoginCTA from "./components/GoogleLoginCTA";
import { useRouter } from "next/router";
import { useSession } from "next-auth/react";
import { useEffect } from "react";

const Home = () => {
  const { data: session, status } = useSession();
  const router = useRouter();

  useEffect(() => {
    if (status === "authenticated") {
      router.push("/dashboard");
    }
  }, [status]);

  return (

    <main className="w-full h-screen bg-bgGray flex flex-row">
      <section className="text-mainWhite w-full ">
        <div className="fixed py-8 px-8">
          <Link href="/home">
            <Image src="/icon.svg" alt="logo" width={100} height={100} />
          </Link>
        </div>
        <div className="h-full flex flex-col justify-center px-8 items-start ">
          <div className="flex flex-col relative justify-start items-start">
            {typeof window !== "undefined" && (
              <div className="h-[70px] w-[70px] z-10 ml-[-20px]">
                <Lottie loop animationData={lottieJson} play />
              </div>
            )}
            <section className="overflow-hidden">
              <div className="animate-[textAnimation_8s_infinite]">
                <p className="font-Pretendard font-normal text-[28px] block">
                  AI Tutor와 함께 학습 효과를 높여보세요!
                </p>
                <p className="font-Pretendard font-normal text-[28px] block">
                  1단계 : 강의원문과 요약노트를 비교하며 학습해보세요
                </p>
                <p className="font-Pretendard font-normal text-[28px] block">
                  2단계 : 서술형 문제를 풀이하며 학습 이해도를 점검해보세요
                </p>
                <p className="font-Pretendard font-normal text-[28px] block">
                  3단계 : AI Tutor에게 질문을 통해 모르는 부분을 보완해보세요
                </p>
                <p className="font-Pretendard font-normal text-[28px] block">
                  이제 AI Tutor와 함께 학습하러 가볼까요?
                </p>
              </div>
            </section>
          </div>
        </div>
      </section>
      <section className="flex flex-col justify-center items-center px-[112px] bg-bgDeepGray">
        <div className="text-mainWhite font-Pretendard font-normal text-[24px] px-4 py-4">
          <p>자기주도학습 시작하기</p>
        </div>
          <GoogleLoginCTA />
      </section>
    </main>
  );
}


export default Home;

// File: app/types/next-auth.d.ts
// types/next-auth.d.ts
import NextAuth from 'next-auth';

declare module 'next-auth' {
  interface Session {
    accessToken?: string;
  }

  interface JWT {
    accessToken?: string;
  }
}

